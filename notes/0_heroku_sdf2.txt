====================================
** ESSENTIAL RAILS....3) PG Dump-Restore
====================================


*) Heroku to Local
  $ heroku pg:backups:capture
  $ heroku pg:backups:download
  (Then place dump file in sdf2 directory)
  $ RAILS_ENV=development rake db:drop DISABLE_DATABASE_ENVIRONMENT_CHECK=1
  $ pg_restore --verbose --clean --no-acl --no-owner -h localhost -U postgres -d sdf2_development latest.dump
  $ pg_restore -c -C -F c -v -U postgres latest.dump

  $ rails db:migrate RAILS_ENV=development



# Call: ServCsvTool.new.restore_backup(Brand, 'Brands.csv')


1) Backup PG
  $ pg_dump -U postgres -F t sdf2_development > db/csv/pg_backups/sdf2_development.psql
  $ pg_dump -F c -v -U postgres -h localhost sdf2_development -f db/csv/pg_backups/sdf2_development.tar

2) Restore PG:
  $ pg_restore -U postgres db/csv/pg_backups/sdf2_development.psql
  $ pg_restore -c -C -F c -v -U postgres db/csv/pg_backups/sdf2_development.tar



==============

	$ heroku run rake jobs:clear --app sdf2


====================


############ Adam Heroku Express! ############
	$ heroku logs -t --app bds-max
	$ heroku run rails c --app bds-max
	$ heroku ps --app bds-max
	$ heroku run rake db:migrate --app bds-max
	$ heroku ps:restart --app bds-max

	$ heroku config:set DB_POOL=10


############ Delayed Job ############
	$ rake jobs:clear
	$ heroku run rake jobs:clear --app sdf2


==========================

dw = Delayed::Worker.new
dj = Delayed::Job.last
dw.run dj

dj = Delayed::Job.last
dj.priority

djs = Delayed::Job.where('priority > 1')

priority

dj.handler

object.delay(:queue => 'tracking').method
object.delay(:queue => 'high_priority', priority: 0).method
